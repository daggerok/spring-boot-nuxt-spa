import java.nio.file.Paths

plugins {
  id 'idea'
  id 'java'
  id 'eclipse'
  id 'com.moowork.node' version '1.2.0'
  id 'com.github.ben-manes.versions' version '0.20.0'
  id 'org.springframework.boot' version '2.1.1.RELEASE'
}

allprojects {
  apply plugin: 'base'
  apply plugin: 'maven'
  version = '1.0.0-SNAPSHOT'
  group = 'com.github.daggerok.es'
  sourceCompatibility = targetCompatibility = 1.8
  defaultTasks 'clean', 'install', 'build'
}

repositories {
  mavenCentral()
}

dependencies {
  implementation platform('org.springframework.boot:spring-boot-dependencies:2.1.1.RELEASE')
  annotationProcessor platform('org.projectlombok:lombok:1.18.4')
  implementation('org.springframework.boot:spring-boot-starter-webflux')
  implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
//  compileOnly('org.projectlombok:lombok')
//  testCompileOnly('org.projectlombok:lombok')
  annotationProcessor('org.projectlombok:lombok')
  testImplementation('org.springframework.boot:spring-boot-starter-test')
  testImplementation('io.projectreactor:reactor-test')
}

node {
  download = true
  version = '9.11.1'
  npmVersion = '5.6.0'
  yarnVersion = '1.6.0'
  nodeModulesDir = file('frontend')
}

clean.doFirst {
  ['nodejs', 'npm', 'yarn'].each { delete "$projectDir/.gradle/$it" }
  ['out', 'build'].each { delete "$projectDir/$it" }
  delete Paths.get('src', 'main', 'resources', 'public')

  def clear = project.hasProperty("clear") ? "true" == project.property("clear") : false
  if (clear) delete Paths.get(project.node.nodeModulesDir.path, 'node_modules')
}

defaultTasks 'clean', 'build'

assemble.dependsOn processResources, npm_run_build
processResources.shouldRunAfter npm_run_build
npm_run_build.dependsOn npm_install

bootJar {
  launchScript()
}

idea {
  module {
    downloadJavadoc = false
    downloadSources = true
  }
}

eclipse {
  classpath {
    downloadJavadoc = false
    downloadSources = true
  }
}

wrapper {
  gradleVersion = '5.1-rc-3'
  distributionType = Wrapper.DistributionType.BIN
}
